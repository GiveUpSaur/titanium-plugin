/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.tealium.appcelerator.android;

import java.util.Locale;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;

import android.app.Application;
import android.os.Build;

import com.tealium.library.Key;
import com.tealium.library.Tealium;
import com.tealium.library.Tealium.LogLevel;

@Kroll.module(name = "TealiumAndroid", id = "com.tealium.appcelerator.android")
public class TealiumAndroidModule extends KrollModule {

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	private static Application application;

	public TealiumAndroidModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {
		application = app;
	}

	@Kroll.method
	public void initialize(String accountName, String profileName, String environment, boolean isRelease) {
		
		Tealium.Config config = Tealium.Config.create(application, 
				accountName, 
				profileName,
				environment);
		
		final String scheme;
		
		if(isRelease) {
			scheme = "https";
			config.setHTTPSEnabled(true)
			.setJavaScriptLogLevel(LogLevel.SILENT)
			.setLibraryLogLevel(Tealium.LogLevel.WARN);
		} else {
			scheme = "http";
			config.setHTTPSEnabled(false)
				.setJavaScriptLogLevel(LogLevel.VERBOSE)
				.setLibraryLogLevel(Tealium.LogLevel.VERBOSE);
		}
		
		config.setMobileHtmlUrlOverride(String.format(Locale.ROOT, 
				"%s://tags.tiqcdn.com/utag/%s/%s/%s/mobile.html?platform=android_titanium&library_version=4.1.1c&os_version=%s", 
				scheme,
				accountName, 
				profileName,
				environment, 
				Build.VERSION.RELEASE));
		
		Tealium.initialize(config);
	}

	// Methods
	@Kroll.method
	public void trackView(String viewName, KrollDict data) {
		if (data == null) {
			data = new KrollDict(1);
		}
		data.put(Key.SCREEN_TITLE, viewName);
		Tealium.track(null, data, Tealium.VIEW);
	}

	// Methods
	@Kroll.method
	public void trackEvent(String eventName, KrollDict data) {
		if (data == null) {
			data = new KrollDict(1);
		}
		data.put(Key.LINK_ID, eventName);
		Tealium.track(null, data, Tealium.EVENT);
	}
}
